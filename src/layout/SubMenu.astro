---
import SubMenu from "./SubMenu.astro";
import Rightarrow from "../svg/rightarrow.astro";
export interface Props {
	items: Array<Object>;
        root:boolean;
}
const { items,root=true } = Astro.props;

---
{items &&
    <ul class={root?"":"nested"}>
        {items.map((item)=>(
            <li >
                <a href={item.href} class={item.active?"active":""}>
                    {item.parent?
                        <span class:list={[{ parent: true, expanded: item.expanded }]} >
                            <svg viewBox="0 0 100 100" width="60" height="60" fill="#00000000" xmlns="http://www.w3.org/2000/svg">
                                <path d="M 20,10 L 70,50 L 20,90" stroke-width="20px" stroke="#d0d0d0" stroke-linecap="round" stroke-linejoin="round"></path>
                            </svg>
                        </span>
                    :<></>}
                    <span>{item.text}</span>
                </a>
                <SubMenu items={item.items} root={false}/>
            </li>
        ))}
    </ul>
}
<style>
    span.parent{
        cursor:pointer;
    }
    span.parent > svg{
        width:16px;
        height:16px;
        rotate: 0deg;
        transition: rotate .4s ease-in-out;
    }
    span.parent.expanded > svg{
        rotate: 90deg;
    }
    span:hover.parent > svg > path{
        stroke:rgb(38, 100, 56);
    }
    ul{
        display:flex;
        flex-direction: column;
        list-style: none;
        margin:0px;
        padding: 0px;
    }
    ul.nested{
        padding-left: 3px;
        border-top:   0px;
        border-left:  2px solid rgb(122, 122, 122);
        border-right: 0px;
        border-bottom:0px;
        margin-left: 4px;
        overflow: hidden;
        max-height: 200vh;
        transition: max-height 1s;
    }
    ul.nested.hidden{
        max-height: 0px;
        transition: max-height 0.3s;
    }
    li{
        min-width: 130px;
    }
    a:hover{
        color:black;
        background-color: #ddd;
    }
    a:hover > span > svg > path{
        stroke:rgb(30, 30, 30);
    }
    a.active{
        background-color: #06ad70;
    }
    
    a{
        padding:10px;
        text-decoration: none;
        user-select: none;    
        color:white;
        display:block;
    }
</style>


<script>
let toggler = document.getElementsByClassName("parent");
for (let i = 0; i < toggler.length; i++) {
  toggler[i].addEventListener("click", function(e) {
      this.parentElement.parentElement.querySelector("ul")?.classList.toggle("hidden");
      this.classList.toggle("expanded");
      e.preventDefault()
  });
}</script>