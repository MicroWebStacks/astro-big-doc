---
import Layout from "@/layout/Layout.astro";
import {existsSync,readdirSync,readFileSync} from 'fs';
import {resolve} from 'path';
import Panzoom from "@/components/panzoom.astro"
import Gallery from "@/components/gallery.astro"
import {get_session_id} from "../../../server/auth/auth_router"
import { env } from 'node:process';

const {page} = Astro.params;
const cookie = Astro.request.headers.get('cookie');
const session_id = get_session_id(cookie)
console.log(`Astro> hello user ${env[session_id]} on page ${page}`)

const page_path = resolve(process.cwd()+'/data/blog/'+page)
if(!existsSync(page_path)){
    console.log(`${page} does not exist`)
    return Astro.redirect("/")
}
//Astro.glob()only use literals, no variables, no string litterals, relative to this file
const posts = await Astro.glob('../../../data/blog/**/*.{md,mdx}')
const Post = posts.find((post)=>(resolve(post.file) == page_path))

if((typeof Post == "undefined")){
    console.log(`${page} could not be imported`)
    return Astro.redirect("/")
}

//Dummy to allow static build for test but not supported
export async function getStaticPaths(){
    const files = readdirSync('data/blog/')//relative to astro root
    return files.map((file)=>({params:{page:file}}))
}

---
{Post &&
<Layout title={Post.frontmatter.title} headings={Post.getHeadings()}>
        <Post.Content components={{...Post.components, Gallery,Panzoom,data:Panzoom }}/>
</Layout>
}
