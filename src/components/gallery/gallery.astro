---
import {yaml_to_grid_images,select_masonry} from './grid_utils.js'
import PhotoGallery from '../photoswipe/Gallery.astro'

export interface Props {
    code: string;
    dirpath: string;
    expanded: boolean;
    masonry: boolean;
}

const { code, dirpath, expanded=true, masonry=null } = Astro.props as Props;

const imagesUrls = await yaml_to_grid_images(code,dirpath)
let mas = masonry
if(mas == null){
    mas = select_masonry(imagesUrls)
}
---

<div class={`pswp-gallery container ${mas?'masonry':'grid'}`} id="my-gallery">
    {imagesUrls.map((image)=>(
        <a  href={image.url}
            class={`item  ${mas?'masonry':'grid'}`}
            style={`grid-area: span ${image.spanHeight} / span ${image.spanWidth};`}
            itemscope
            itemtype="http://schema.org/ImageGallery"
            data-pswp-width={image.width} 
            data-pswp-height={image.height} >
            {(image.ext == ".svg")?
                <object data={image.url} />:
                <img src={image.url} />
            }
        </a>
    ))}
</div>

<style>
.container.grid{
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));
    grid-auto-rows: 10rem;
    grid-gap: 10px;
}
img{
    width: 100%;
    height: 100%;
    object-fit:cover;
}
.container.masonry{
    column-width: 20rem;
    column-gap: 1rem;
}
.item.masonry{
    break-inside: avoid;
    margin-bottom: 1rem;
}
</style>

<script src="./gallery.js" />
