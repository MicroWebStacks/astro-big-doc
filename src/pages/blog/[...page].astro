---
import Layout from "@/layout/Layout.astro";
import {promises as fs} from 'node:fs';
import {resolve} from 'node:path';
import Panzoom from "@/components/panzoom.astro"
import Gallery from "@/components/gallery.astro"
import Page_404 from "@/components/404.astro"
import H1 from "@/components/headings/H1.astro"
import H2 from "@/components/headings/H2.astro"
import H3 from "@/components/headings/H3.astro"
import {get_section_urls, get_section_file_from_url} from "@/layout/nav_section"

const {page} = Astro.params;
const page_path = await get_section_file_from_url('/data/blog',page,'/blog/')
console.log(`Astro/blog> url: /blog/${page} file: ${page_path}`)

let found = true
let Post = null
try {
  await fs.access(page_path)
} catch {
    console.warn(`Astro/blog> ${page} does not exist`)
    found = false
}

if(found){
    //console.time('glob')
    const posts = import.meta.glob('../../../data/blog/**/*.{md,mdx}')//relative to this component file
    //console.timeEnd('glob')
    const component_path = "__filedir"
    const Post_path = Object.keys(posts).find((path)=>(resolve(component_path,path) == page_path))
    

    if((typeof Post_path == "undefined")){
        console.warn(`Astro/blog> ${page} could not be imported`)
        found = false
    }
    if(found){
        //console.time('import')
        Post = await posts[Post_path]()
        //console.timeEnd('import')
    }
}

export async function getStaticPaths(){
    const static_files_paths = await get_section_urls('/data/blog','/blog/')
    return static_files_paths.map((url)=>({params:{page:url}}))
}


---
{Post &&
<Layout title={Post.frontmatter.title} headings={Post.getHeadings()}>
        <Post.Content components={{...Post.components, Gallery,Panzoom,data:Panzoom,h1:H1,h2:H2,h3:H3 }}/>
</Layout>
}
{!found &&
<Page_404 target={page}/>
}
