---
//https://ellodave.dev/blog/article/using-svgs-as-astro-components-and-inline-css/
import {existsSync,readFileSync} from 'fs'
import SvgIcons from '@/components/svgicons.astro'
export interface Props {
  'data-filename': string;
  'data-filedir': string;
}

const { 'data-filename':filename,'data-filedir':filedir } = Astro.props as Props;
const filepath = `${filedir}/${filename}`
console.log(`SvgPz ===> : ${filepath}`)

const innerHTML = existsSync(filepath)?readFileSync(filepath).toString():await Astro.slots.render('default');
---
<div class="container" data-filename={filename}>
  <div class="header">
    <SvgIcons filename="full-screen"/>
  </div>
  <div class="figure">
    <Fragment set:html={innerHTML} />
  </div>
  <div class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <Fragment set:html={innerHTML} />
    </div>
  </div>
</div>

<style >
.container{
  background: white;
  border-radius: 5px;
  display:flex;
  
  justify-content: flex-start;
  gap:0px;
  flex-direction: column;
  align-items: flex-start;
  padding:5px;
  box-shadow: 4px 2px 8px 4px rgba(81, 81, 81, 0.5);
  width:fit-content;
}
.header{
  display:flex;
  flex-direction: row;
  justify-content: flex-end;
  background:white;
  width:100%;
  padding: 2px;
  border-radius: 5px;
}
.header:hover{
  background:#ddd;
  cursor: pointer;
}

.figure{
  display: flex;
}
.figure > svg{
}
.modal{
  display: none;
  position: fixed;
  z-index: 1;
  padding-top: 100px;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: black;
  background-color: rgba(0,0,0,0.4);
}
.modal-content {
  background-color: #fefefe;
  margin: auto;
  padding: 20px;
  border: 1px solid #888;
  width:fit-content;
}
.close {
  color: #aaaaaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: #000;
  text-decoration: none;
  cursor: pointer;
}
</style>

<style is:inline>
  .header > svg{
  height: 16px;
  width: 16px;
  margin:0px;
  padding:2px;
}
</style>

<script define:vars={{ filename }}>
  const container = document.querySelector(`.container[data-filename="${filename}"]`)
  const header = container.querySelector(".header")
  const modal = container.querySelector(".modal")
  const close = modal.querySelector(".close")
  header.onclick = ()=>{
    const svg = container.querySelector(".figure").firstElementChild
    modal.style.display = "block"
  }
  close.onclick = ()=>{
    modal.style.display = "none"
  }
  modal.onclick = (event)=>{
    if(event.target == modal){
      modal.style.display = "none"
    }
  }
</script>
